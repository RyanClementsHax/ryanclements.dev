name: CI

on:
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: restore cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: install
        run: yarn install --frozen-lockfile --check-files
        # cache the working directory so we can use it in other jobs without having to checkout and install
      - uses: actions/cache@v2
        with:
          path: ./**
          key: ${{ github.sha }}
  lint:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: restore source code
        uses: actions/cache@v2
        with:
          path: ./**
          key: ${{ github.sha }}
      - run: yarn lint:all
  test:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: restore source code
        uses: actions/cache@v2
        with:
          path: ./**
          key: ${{ github.sha }}
      - run: yarn test
  type_check:
    name: type check
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: restore source code
        uses: actions/cache@v2
        with:
          path: ./**
          key: ${{ github.sha }}
      - run: yarn type-check
  lighthouse:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v2
      - name: awaiting preview url
        uses: patrickedqvist/wait-for-vercel-preview@v1.1.1
        id: vercel_preview_url
        with:
          token: ${{ secrets.LIGHTHOUSE_CHECK_GITHUB_ACCESS_TOKEN }}
          max_timeout: 60
      - name: restore source code
        uses: actions/cache@v2
        with:
          path: ./**
          key: ${{ github.sha }}
      - name: add comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.LIGHTHOUSE_CHECK_GITHUB_ACCESS_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: |
            🚦 Running Lighthouse audit...
      - name: audit urls using lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            ${{ steps.vercel_preview_url.outputs.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
      - name: format lighthouse result
        id: lighthouse_result
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.LIGHTHOUSE_CHECK_GITHUB_ACCESS_TOKEN }}
          script: |
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const results = (${{ steps.lighthouse_audit.outputs.manifest }}).filter(result => result.isRepresentativeRun);

            const score = res => res >= 90 ? '🟢' : res >= 50 ? '🟠' : '🔴';

            const comment = results.map((result) => {
              const summary = result.summary;
              const url = result.url;

              return `
              🌎 [${url}](${url})
              ⚡️ [Lighthouse report](${links[url]})

              | Category | Score |
              | --- | --- |
              ${Object.keys(summary).map((key) => {
                const percentage = Math.round(summary[key] * 100);
                return `| ${score(percentage)} ${key} | ${percentage} |`;
              }).join('\n')}

              `;
            }).join('---');

            core.setOutput("comment", comment);
      - name: add lighthouse comment to PR
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.LIGHTHOUSE_CHECK_GITHUB_ACCESS_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: |
            ${{ steps.lighthouse_result.outputs.comment }}
